<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>GPL command line tool for processing of nutritional data.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.buildcontextcapture.BuildContextJobProperty plugin="buildcontext-capture@0.5">
      <on>false</on>
    </org.jenkinsci.plugins.buildcontextcapture.BuildContextJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_LOCATION</name>
          <description></description>
          <defaultValue>http://localhost:8080/job/publish-s3uploader-tagged-sources/lastSuccessfulBuild/artifact/s3uploader-sources.tar.gz</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPTIMIZE</name>
          <description>Optimization flags</description>
          <defaultValue>-O3</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jvnet.hudson.plugins.shelveproject.ShelveProjectProperty plugin="shelve-project-plugin@1.3"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>export CXXFLAGS=&quot;${OPTIMIZE}&quot;
export CFLAGS=&quot;${OPTIMIZE}&quot;

curl -s ${SOURCE_LOCATION} |  tar -xv --strip=1
ls

mkdir -p build/pkg;

cd build;

project_with_version=`cat ../version.txt`
project=fuma-s3-uploader

../configure --prefix=`pwd`/pkg &amp;&amp; make &amp;&amp; make install;

cd pkg; tar -czf ../${project}-binaries.tar.gz .
cd ../;

make distclean;

../configure --prefix=&amp;&amp; make &amp;&amp; make distcheck;

cp ${project_with_version}.tar.gz ${project}-sources.tar.gz 
echo &quot;${project_with_version}&quot; &gt; version.txt
cat version.txt</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.test.AggregatedTestResultPublisher>
      <includeFailedBuilds>true</includeFailedBuilds>
    </hudson.tasks.test.AggregatedTestResultPublisher>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build/*.tar.gz,build/version.txt</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Fingerprinter>
      <targets></targets>
      <recordBuildArtifacts>true</recordBuildArtifacts>
    </hudson.tasks.Fingerprinter>
    <hudson.plugins.descriptionsetter.DescriptionSetterPublisher plugin="description-setter@1.8">
      <regexp>(s3uploader-0.*)</regexp>
      <regexpForFailed></regexpForFailed>
      <setForMatrix>false</setForMatrix>
    </hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
    <hudson.tasks.BuildTrigger>
      <childProjects>publish-s3uploader-binaries</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
      </threshold>
    </hudson.tasks.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.4"/>
  </buildWrappers>
</project>