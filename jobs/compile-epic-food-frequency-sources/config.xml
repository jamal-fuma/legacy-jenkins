<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>GPL command line tool for processing of nutritional data.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_LOCATION</name>
          <description></description>
          <defaultValue>http://localhost:8080/job/publish-epic-food-frequency-sources/lastSuccessfulBuild/artifact/epic-food-frequency-sources.tar.gz</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPTIMIZE</name>
          <description>Optimization flags</description>
          <defaultValue>-O3</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jvnet.hudson.plugins.shelveproject.ShelveProjectProperty/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>export CXX=&quot;ccache g++&quot;
export CC=&quot;ccache gcc&quot;
export CXXFLAGS=&quot;${OPTIMIZE}&quot;
export CFLAGS=&quot;${OPTIMIZE}&quot;

rm -rf srcs build;

mkdir srcs;
mkdir build; 
mkdir build/_inst;


wget ${SOURCE_LOCATION} -O - | tar -xz --strip=1 -C srcs ;
project_with_version=`grep AC_INIT srcs/configure.ac | cut -f 1,2 -d&apos;,&apos; | tr -d &apos;[[]]&apos; | sed -e &apos;/^[^(]\+./{ s///; s/,/-/; }&apos;`
project=`grep AC_INIT srcs/configure.ac | cut -f 1 -d&apos;,&apos; | tr -d &apos;[[]]&apos; | sed -e &apos;/^[^(]\+./{ s///; s/,/-/; }&apos;`


cd build;
../srcs/configure --prefix=&quot;`pwd`/_inst&quot; &amp;&amp; make &amp;&amp; make install;

tar -czf ${project}-binaries.tar.gz _inst/
make distclean;

../srcs/configure &amp;&amp; make &amp;&amp; make distcheck;

cp ${project_with_version}.tar.gz ${project}-sources.tar.gz 
echo &quot;${project_with_version}&quot; &gt; version.txt
cat version.txt</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.test.AggregatedTestResultPublisher>
      <includeFailedBuilds>true</includeFailedBuilds>
    </hudson.tasks.test.AggregatedTestResultPublisher>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build/*.tar.gz,build/version.txt</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.BuildTrigger>
      <childProjects>publish-epic-food-frequency-binaries</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
      </threshold>
    </hudson.tasks.BuildTrigger>
    <hudson.tasks.Fingerprinter>
      <targets></targets>
      <recordBuildArtifacts>true</recordBuildArtifacts>
    </hudson.tasks.Fingerprinter>
    <hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
      <regexp>(epic-food-frequency-0.*)</regexp>
      <regexpForFailed></regexpForFailed>
      <setForMatrix>false</setForMatrix>
    </hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
  </publishers>
  <buildWrappers/>
</project>