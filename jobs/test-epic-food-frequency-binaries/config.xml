<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>GPL command line tool for processing of nutritional data.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_LOCATION</name>
          <description>Where the binaries to test live
</description>
          <defaultValue>http://localhost:8080/job/publish-epic-food-frequency-binaries/lastSuccessfulBuild/artifact/epic-food-frequency-linux-binaries.tar.gz</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jvnet.hudson.plugins.shelveproject.ShelveProjectProperty/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>        rm -fv *.tar*
rm -rf _inst;
mkdir _inst;
cd _inst;
        wget -nv ${SOURCE_LOCATION} -O epic-food-frequency-linux-binaries.tar.gz ;
 tar -xz --strip=1 -f epic-food-frequency-linux-binaries.tar.gz;

bin/epic_ffq -V 2&gt;&amp;1 | tee ../version.txt
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>version.txt</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.BuildTrigger>
      <childProjects>test-epic-food-frequency-config-loading</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
      </threshold>
    </hudson.tasks.BuildTrigger>
    <hudson.tasks.Fingerprinter>
      <targets></targets>
      <recordBuildArtifacts>true</recordBuildArtifacts>
    </hudson.tasks.Fingerprinter>
    <hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
      <regexp>(Epic_Client.*)</regexp>
      <regexpForFailed></regexpForFailed>
      <setForMatrix>false</setForMatrix>
    </hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
  </publishers>
  <buildWrappers/>
</project>